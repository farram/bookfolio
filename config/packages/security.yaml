security:
    enable_authenticator_manager: true
    hide_user_not_found: false
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # encoders:
    #     App\Entity\User:
    #         algorithm: bcrypt
    #     App\Entity\Gallery:
    #         algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        # in_database:
        #     entity:
        #         class: App\Entity\User
        #         property: email
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # anonymous: true

            remember_me:
                secret: "%kernel.secret%"
                lifetime: 604800 # 1 week in seconds
                path: /

            lazy: true
            provider: app_user_provider

            form_login:
                login_path: app_login
                check_path: app_login

            logout:
                path: app_logout
                target: home

            switch_user: true
            custom_authenticator: App\Security\LoginFormAuthenticator

            # guard:
            #     entry_point: App\Security\UserAuthenticator
            #     authenticators:
            #         - App\Security\UserAuthenticator
            #         - App\Security\GoogleAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/dashboard, roles: ROLE_USER }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

    # La partie role_hierarchy contient la hiérarchie des rôles
    # Un éditeur sera également utilisateur
    # Un administrateur sera également éditeur et donc utilisateur
    role_hierarchy:
        ROLE_ADMIN: [ROLE_EDITOR, ROLE_ALLOWED_TO_SWITCH]
        ROLE_EDITOR: ROLE_USER
